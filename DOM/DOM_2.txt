CHANGING ELEMENTS CONTENT

Each element is rendered/block loaded line by line and one by one in HTML.

Put your JS file at the bottom of the HTML body, so that all HTML elements
are loaded first and then you can start modifying the JS file.

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <p id="hello">Hello World </p>
    <p class="pClass">My Name is </p>
    <p id="name">Shashank Kumar </p>
    <h1 class="pClass">JavaScript Essentials</h1>
    <script src="myapp.js"></script>
  </body>
</html>


The <script src="myapp.js"></script> is inside the HTML body at the bottom.

document.getElementById('hello')
-><p id="hello">Hello World </p> - return the element selected by id hello

This is DOM is just a reference to an object.




You can modify texts in such objects by the .innerText property.

Eg: document.getElementById('hello').innerText = "New World";

Changed the Hello World to New World in the browser.

+= can be used as a concatenation

Eg: document.getElementById('hello').innerText += " Order";

concatenated the New World to New World Order in the browser.




-When we use these instructions repeatedly, it isn't efficient for the reader


creating symbols/variables will reduce the time for the GIT compiler, it just creates
a symbol that references to that particular object in the DOM, doen't create 
a new object.

var pHello = document.getElementById('hello');
pHello.innerText = "new World"
pHello.innerText += " order"

->new World order



You can add HTML Tags in the objects of the DOM by .innerHTML

var pHello = document.getElementById('hello');
pHello.innerHTML = "new World <span>hello world</span>";

-> new World hello world

only presents the content in HTML tags ie visual to the user and 
not the tags. But tags are created in the DOM.




the outer HTML can be accessed by .outerHTML, where the entire
HTML tag is shown to the user

and this can be modified according to the user's requirements.

Phello.outerHTML = '<h2 id="hello">Hello World </h2>'

earlier this was p tag now modified to h2. Outer HTML is modified



OUERY SELECTOR
the .querySelectorAll() - has the ability to return multiple
elements, so return an array

so to return/target a single element use []

var spanH1 = document.qurySelectorAll('h1 span'); - return an array

var spanH1 = document.qurySelectorAll('h1 span')[0] - selects that particular target

then you can modify it 
like

spanH1[0].innerHTML = "new text here"

->whenever this span is located new text here will be written there.

